name: CI

on:
  push:
  pull_request:

env:
  PYTEST_DISABLE_PLUGIN_AUTOLOAD: "1"
  RUN_INTEGRATION: ${{ vars.RUN_INTEGRATION || '0' }}

jobs:
  unit:
    name: Unit / Lintless Gate
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip tooling
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install project (dev extras)
        run: pip install -e ".[dev]"

      - name: Validate dependency graph
        run: pip check

      - name: Run unit-focused tests
        run: pytest -q -c pytest.min.ini -m "not integration"

  integration:
    name: Integration Matrix (opt-in)
    if: ${{ env.RUN_INTEGRATION == '1' }}
    runs-on: ${{ matrix.os }}
    env:
      PYTEST_DISABLE_PLUGIN_AUTOLOAD: "0"
      RUN_INTEGRATION: "1"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip tooling
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install project (dev extras)
        run: pip install -e ".[dev]"

      - name: Validate dependency graph
        run: pip check

      - name: Run integration tests
        run: pytest -q -c pytest.min.ini -m "integration"
