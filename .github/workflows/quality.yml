name: Quality Gates

on:
  pull_request:
  push:
    branches: [main]

permissions:
  contents: read

env:
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"
  PIP_NO_CACHE_DIR: "off"
  PIP_DISABLE_PIP_VERSION_CHECK: "on"
  PIP_DEFAULT_TIMEOUT: "100"

jobs:
  quality:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            pyproject.toml

      - name: Cache pip packages (explicit)
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.11-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.11-
            ${{ runner.os }}-pip-

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip --version

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          fi
          pip install -e .[dev,ci]

      - name: Verify installation
        run: |
          pip list
          python -c "import pytest; print(f'pytest version: {pytest.__version__}')"

      - name: Run quality checks
        run: |
          python -m pytest tests/ci/ -v --tb=short --strict-markers

  performance:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: quality  # اجرا بعد از quality
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            pyproject.toml

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.11-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.11-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          fi
          pip install -e .[dev,ci]

      - name: Debug test discovery
        run: |
          echo "=== Python Environment ==="
          which python
          python --version
          echo "=== Installed Packages ==="
          pip list | grep -E "(pytest|student-mentor)" || echo "No matching packages"
          echo "=== Test Discovery ==="
          python -m pytest tests/perf/ --collect-only -q || echo "No tests found in tests/perf/"

      - name: Run performance tests
        run: |
          if [ -d "tests/perf" ] && [ -n "$(find tests/perf -name 'test_*.py' -o -name '*_test.py')" ]; then
            echo "=== Running Performance Tests ==="
            python -m pytest -v tests/perf/ --durations=10
          else
            echo "⚠️ No performance tests found, skipping..."
          fi
