name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: read
  checks: write
  pull-requests: write

env:
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"
  PIP_NO_CACHE_DIR: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 3s
          --health-timeout 3s
          --health-retries 10
    
    env:
      QT_QPA_PLATFORM: offscreen
      MPLBACKEND: Agg
      TEST_ENV: ci
      TESTING: "1"
      REDIS_URL: redis://localhost:6379/0
      DATABASE_URL: sqlite:///:memory:
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --no-cache-dir --upgrade pip setuptools wheel
          pip install --no-cache-dir -e .[test]

      - name: Wait for Redis
        run: |
          python -c "
import time
import redis

for attempt in range(10):
    try:
        client = redis.Redis(host='localhost', port=6379, socket_connect_timeout=2)
        client.ping()
        print(f'✓ Redis ready on attempt {attempt + 1}')
        break
    except Exception as e:
        if attempt == 9:
            raise RuntimeError(f'Redis failed: {e}')
        print(f'⚠ Attempt {attempt + 1}/10 failed')
        time.sleep(1)
"

      - name: Run tests
        run: |
          pytest \
            --cov=src \
            --cov-report=term-missing \
            --cov-report=xml:coverage.xml \
            --cov-report=html:htmlcov \
            --junitxml=test-results/junit.xml \
            --html=test-results/report.html \
            --self-contained-html \
            -v \
            --tb=short \
            --maxfail=5

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage.xml
          fail_ci_if_error: false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results/
            htmlcov/
          retention-days: 30
