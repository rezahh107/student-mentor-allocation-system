name: CI (Redis + RedisTLS for integration)

on:
  workflow_dispatch: {}   # اجرای دستی از تب Actions
  push:
    branches: [ "ci/redis-tls-services" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci-redis-tls:
    runs-on: ubuntu-latest

    env:
      TZ: Asia/Tehran
      PYTEST_DISABLE_PLUGIN_AUTOLOAD: "1"
      PYTHONWARNINGS: error
      REDIS_URL:  redis://127.0.0.1:6379/15
      REDISS_URL: rediss://127.0.0.1:6380/15
      # برای سناریوی "requires_ca_success"
      REDIS_TLS_CA_FILE: ${{ github.workspace }}/ci/certs/server.crt
      # برای سناریوی "allow_insecure"
      REDIS_TLS_ALLOW_INSECURE: "1"

    services:
      redis:
        image: redis:7
        ports: [ "6379:6379" ]
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 5s --health-timeout 3s --health-retries 30

      redistls:
        image: bitnami/redis:7.2
        ports: [ "6380:6380" ]
        env:
          REDIS_TLS_ENABLED: "yes"
          REDIS_TLS_PORT_NUMBER: "6380"
          REDIS_TLS_AUTH_CLIENTS: "no"
          REDIS_PASSWORD: ""
          REDIS_TLS_CERT_FILE: /certs/server.crt
          REDIS_TLS_KEY_FILE:  /certs/server.key
          REDIS_TLS_CA_FILE:   /certs/server.crt
        volumes:
          - ${{ github.workspace }}/ci/certs:/certs:ro
        options: >-
          --health-cmd "redis-cli -h 127.0.0.1 -p 6380 --tls --cacert /certs/server.crt ping || exit 1"
          --health-interval 5s --health-timeout 3s --health-retries 30

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          # پایدارتر؛ بعداً می‌تونیم به 3.13 مهاجرت بدیم وقتی wheels کامل شد
          python-version: "3.11"

      - name: Install project (CI extras)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # نصب از اکسترای ci که در pyproject.toml تعریف شد
          pip install -e .[ci]

      - name: Verify redis and CI deps are importable
        run: |
          python -c "import sys; print('Python', sys.version)"
          python -c "import redis; print('redis', redis.__version__)"
          python -c "import prometheus_client, tenacity, yaml, jinja2; print('deps ok')"

      - name: Pre-test cleanup (flush Redis/RedisTLS)
        run: |
          python scripts/flush_state.py

      - name: Run CI tests (no skips/xfails)
        run: |
          pytest -q -p pytest_asyncio -W error tests/ci

      - name: Post-test cleanup (always)
        if: always()
        run: |
          python scripts/flush_state.py
