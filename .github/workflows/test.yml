name: Windows Test Suite

on:
  push:
    branches: ["main","master","develop"]
  pull_request:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: Enable debug mode
        required: false
        default: 'false'
      test_filter:
        description: Pytest -k filter
        required: false
        default: ''

permissions:
  contents: read
  checks: write
  pull-requests: write
  actions: read

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  PYTHONUTF8: "1"
  PYTHONWARNINGS: "error"
  PYTHONHASHSEED: "0"
  PYTEST_DISABLE_PLUGIN_AUTOLOAD: "1"
  TZ: "Asia/Tehran"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

defaults:
  run:
    shell: pwsh
    working-directory: ${{ github.workspace }}

jobs:
  test-matrix:
    runs-on: windows-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10','3.11','3.12']
        include:
          - python-version: '3.11'
            coverage: true

    steps:
      - name: Init workspace
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference='Stop'
          @('artifacts','logs','test-results','.cache','coverage') | % { New-Item -ItemType Directory -Force -Path $_ | Out-Null }

      - uses: actions/checkout@v4
        with: { fetch-depth: 0, clean: true }

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: pip
          cache-dependency-path: |
            **/constraints*.txt
            **/requirements*.in
            **/requirements*.txt
            **/pyproject.toml

      - name: Install deps (constraints-aware, retry)
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference='Stop'
          function Invoke-Retry([scriptblock]$Cmd,[int]$Max=3){ for($i=1;$i -le $Max;$i++){ try{ & $Cmd; return } catch{ if($i -eq $Max){ throw } Start-Sleep -Seconds ([int][Math]::Pow(2,$i)) } } }
          Invoke-Retry { python -m pip install -U pip setuptools wheel }
          if ((Test-Path "constraints-dev.txt") -and (Test-Path "requirements-dev.in")) {
            Invoke-Retry { python -m pip install -c constraints-dev.txt -r requirements-dev.in }
          } elseif (Test-Path "requirements-dev.txt") {
            Invoke-Retry { python -m pip install -r requirements-dev.txt }
          } elseif (Test-Path "requirements.txt") {
            Invoke-Retry { python -m pip install -r requirements.txt }
          }
          Invoke-Retry { python -m pip install -e . }
          python -m pip check
          python -m pip list --format=json > artifacts/pip-list-${{ matrix.python-version }}.json

      - name: Pre-flight info
        run: |
          python - <<'PY'
import json, platform, sys, pathlib
pathlib.Path('artifacts').mkdir(exist_ok=True)
json.dump({
  "python": sys.version,
  "platform": platform.platform(),
  "executable": sys.executable,
}, open(f"artifacts/python-info-${{ env.MatrixPython || '${{ matrix.python-version }}' }}.json","w"), indent=2)
PY

      - name: Run tests (scoped, deterministic)
        env:
          PYTEST_CURRENT_TEST: "ci-windows-${{ matrix.python-version }}"
        run: |
          $args = @(
            '--rootdir', $PWD,
            '--tb=short','--strict-config','--strict-markers',
            '--ignore-glob=**/System Volume Information',
            '--ignore-glob=**/WindowsApps',
            '--ignore-glob=**/Program Files*',
            '--json-report','--json-report-file=test-results/pytest-${{ matrix.python-version }}.json',
            '--junitxml=test-results/junit-${{ matrix.python-version }}.xml',
            '--html=test-results/report-${{ matrix.python-version }}.html',
            '--self-contained-html'
          )
          if ("${{ matrix.coverage }}" -eq "true") {
            $args += @('--cov=src','--cov-branch',
                       '--cov-report=xml:coverage/coverage-${{ matrix.python-version }}.xml',
                       '--cov-report=html:coverage/htmlcov-${{ matrix.python-version }}')
          }
          if ("${{ github.event.inputs.test_filter }}") { $args += @('-k',"${{ github.event.inputs.test_filter }}") }
          python -m pytest tests $args

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-tests-${{ matrix.python-version }}-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            test-results/**
            coverage/**
            artifacts/**
            logs/**
          retention-days: 7
