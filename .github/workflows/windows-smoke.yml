name: Windows Smoke

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  smoke:
    runs-on: windows-latest
    env:
      PYTEST_DISABLE_PLUGIN_AUTOLOAD: '1'
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure UTF-8 session
        run: |
          chcp 65001 | Out-Null
          [Console]::OutputEncoding = [System.Text.UTF8Encoding]::new($false)

      - name: Diagnose host
        run: pwsh -NoLogo -File scripts/win/00-diagnose.ps1

      - name: Provision virtual environment
        run: pwsh -NoLogo -File scripts/win/10-venv-install.ps1 -ConstraintsPath constraints-win.txt

      - name: Generate environment files
        run: pwsh -NoLogo -File scripts/win/20-create-env.ps1 -WriteEnv -Force

      - name: Start backing services
        run: pwsh -NoLogo -File scripts/win/30-services.ps1 -Mode Docker -ComposeFile docker-compose.dev.yml

      - name: Launch application
        run: pwsh -NoLogo -File scripts/win/40-run.ps1 -Background -StateDir tmp\ci-win -Host 127.0.0.1 -Port 8000

      - name: Smoke tests
        run: pwsh -NoLogo -File scripts/win/50-smoke.ps1 -StateDir tmp\ci-win -ServiceMode Docker -ComposeFile docker-compose.dev.yml

      - name: Run documentation tests
        run: |
          .\.venv\Scripts\python.exe -m pytest tests/docs/test_windows_install_guide.py -q

      - name: Upload smoke artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: win-smoke-artifacts
          if-no-files-found: ignore
          path: reports/win-smoke

      - name: Upload pytest summary (if present)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: windows-pytest-summary
          if-no-files-found: ignore
          path: reports/pytest-summary.txt

      - name: Stop application
        if: ${{ always() }}
        run: |
          $statePath = 'tmp\ci-win\state.json'
          if (Test-Path $statePath) {
            $json = Get-Content -Path $statePath -Encoding UTF8 | ConvertFrom-Json
            if ($json.pid) {
              Stop-Process -Id [int]$json.pid -Force -ErrorAction SilentlyContinue
            }
          }

      - name: Docker cleanup
        if: ${{ always() }}
        run: |
          if (Get-Command docker -ErrorAction SilentlyContinue) {
            docker compose -f docker-compose.dev.yml down --remove-orphans
          }

      - name: Post-run service cleanup
        if: ${{ always() }}
        run: pwsh -NoLogo -File scripts/win/30-services.ps1 -Action Cleanup -Mode Docker -ComposeFile docker-compose.dev.yml
