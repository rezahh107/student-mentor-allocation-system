name: Linux Test Suite

on:
  push:
    branches: ["main", "develop"]
  pull_request:
  workflow_dispatch:

env:
  PYTHONUTF8: "1"
  PYTHONWARNINGS: "error"
  PYTHONHASHSEED: "0"
  PYTEST_DISABLE_PLUGIN_AUTOLOAD: "1"
  TZ: "Asia/Tehran"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

defaults:
  run:
    shell: bash
    working-directory: ${{ github.workspace }}

jobs:
  linux-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Init workspace
        run: |
          set -euo pipefail
          mkdir -p artifacts logs test-results .cache coverage

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.9"
          cache: pip
          cache-dependency-path: |
            **/constraints*.txt
            **/requirements*.in
            **/requirements*.txt
            **/pyproject.toml

      - name: Install (constraints-aware, retry)
        env:
          CI_CORRELATION_ID: ${{ github.run_id }}-${{ github.run_attempt }}-linux
          PIP_REQUIRE_HASHES: ''
        run: |
          set -euo pipefail
          python -m pip install -U pip wheel
          python -m scripts.ci.bootstrap_guard --root . --constraints constraints-dev.txt
          python -m scripts.deps.ensure_lock --root . install --attempts 3
          python -m scripts.deps.ensure_lock --root . verify
          python -m pip check
          python -m pip list --format=json > artifacts/pip-list-linux.json

      - name: Preflight (pytest ready)
        run: |
          set -euo pipefail
          python -m scripts.ci.ensure_ci_ready --root . --require pytest --require pytest_asyncio --persian

      - name: Verify AGENTS spec tokens
        run: |
          set -euo pipefail
          python scripts/verify_agents.py

      - name: Guard PYTHONPATH front-loading
        run: |
          set -euo pipefail
          python scripts/guard_pythonpath.py

      - name: Middleware order guard
        run: |
          set -euo pipefail
          python -m pytest tests/api/test_middleware_order.py -q -p pytest_asyncio

      - name: Shadowing guard tests
        run: |
          set -euo pipefail
          python -m pytest tests/imports -q -p pytest_asyncio

      - name: Run tests (deterministic)
        env:
          PYTEST_CURRENT_TEST: linux-ci
        run: |
          set -euo pipefail
          python -m pytest tests \
            --rootdir "$PWD" \
            --tb=short --strict-config --strict-markers \
            --json-report --json-report-file=test-results/pytest-linux.json \
            --junitxml=test-results/junit-linux.xml \
            --html=test-results/report-linux.html --self-contained-html

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: linux-tests-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            test-results/**
            artifacts/**
            logs/**
            coverage/**
          retention-days: 7
