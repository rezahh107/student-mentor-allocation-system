name: Deep Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'

jobs:
  standard-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run adaptive standard suite
        run: python -m scripts.adaptive_testing --mode=standard

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: logs/coverage.xml

      - name: Upload pytest results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: pytest-report
          path: logs/pytest-report.json

  deep-test:
    runs-on: ubuntu-latest
    needs: standard-test
    if: github.event_name == 'pull_request' || github.event_name == 'schedule'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-advanced.txt
          pip install -r requirements-ml.txt

      - name: Run adaptive deep suite
        run: python -m scripts.adaptive_testing --mode=deep

      - name: Upload mutation results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: mutation-report
          path: logs/adaptive_latest.json

  security-scan:
    runs-on: ubuntu-latest
    needs: standard-test
    if: github.event_name == 'pull_request' || github.event_name == 'schedule'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install security dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Bandit scan
        run: bandit -r src/ -f json -o bandit-report.json

      - name: Safety check
        run: safety check --json > safety-report.json

      - name: Upload security artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
