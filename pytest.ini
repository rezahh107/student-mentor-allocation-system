[pytest]
# ═══════════════════════════════════════════════════════════════
# 🎯 تنظیمات اصلی pytest
# ═══════════════════════════════════════════════════════════════
minversion = 7.0
testpaths = tests
pythonpath = src .

# ═══════════════════════════════════════════════════════════════
# 🚀 تنظیمات اجرا و گزارش‌دهی
# ═══════════════════════════════════════════════════════════════
addopts =
    # --- حالت اجرا ---
    -ra
    --strict-markers
    --strict-config
    --showlocals
    -v
    
    # --- پوشش کد ---
    --cov=src
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-branch
    --cov-fail-under=80
    
    # --- گزارش‌های استاندارد ---
    --junitxml=test-results/junit.xml
    --html=test-results/report.html
    --self-contained-html
    
    # --- تنظیمات عملکرد ---
    --tb=short
    --maxfail=3
    --timeout=300
    --timeout-method=thread
    
    # --- تنظیمات موازی‌سازی ---
    -n=auto
    --dist=loadgroup
    
    # --- تنظیمات cache ---
    --cache-clear
    
    # --- تنظیمات امنیتی ---
    --durations=10
    --durations-min=1.0

# ═══════════════════════════════════════════════════════════════
# 📁 الگوهای فایل و دایرکتوری
# ═══════════════════════════════════════════════════════════════
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# فایل‌های تست خاص پروژه شما
python_files =
    test_asgi_retry.py
    test_retry_metrics.py
    test_xlsx_excel_safety.py
    test_atomic_finalize.py
    test_csv_golden.py
    test_streaming_large.py
    test_export_streaming_memory.py
    test_state_hygiene.py
    test_no_warnings_gate.py
    test_no_skips_gate.py
    test_full_suite.py
    test_middleware_order_all_apps.py
    test_metrics_protection_all_apps.py
    test_counter_rules.py
    test_cross_layer_consistency.py
    test_mobile_normalization.py
    test_clock_injection.py
    test_fairness_distribution.py
    test_fairness_determinism.py
    test_reason_codes.py
    test_allocation_service_payloads.py

# دایرکتوری‌هایی که باید نادیده گرفته شوند
norecursedirs =
    .git
    .tox
    .eggs
    *.egg
    dist
    build
    docs
    .venv
    venv
    __pycache__
    .pytest_cache
    .mypy_cache
    .ruff_cache
    htmlcov
    test-results

# ═══════════════════════════════════════════════════════════════
# 🔌 پلاگین‌های مورد نیاز
# ═══════════════════════════════════════════════════════════════
required_plugins =
    pytest-cov>=4.1.0
    pytest-asyncio>=0.21.0
    pytest-xdist>=3.3.0
    pytest-timeout>=2.1.0
    pytest-html>=3.2.0
    pytest-json-report>=1.5.0
    pytest-mock>=3.11.0
    pytest-freezegun>=0.4.2
    pytest-qt>=4.2.0

# ═══════════════════════════════════════════════════════════════
# 🌍 متغیرهای محیطی
# ═══════════════════════════════════════════════════════════════
env =
    # --- تنظیمات منطقه‌ای ---
    TZ=Asia/Tehran
    LANG=fa_IR.UTF-8
    LC_ALL=fa_IR.UTF-8
    
    # --- تنظیمات Python ---
    PYTHONWARNINGS=error
    PYTHONHASHSEED=0
    PYTHONDONTWRITEBYTECODE=1
    PYTHONUNBUFFERED=1
    
    # --- تنظیمات محیط تست ---
    TEST_ENV=ci
    TESTING=1
    DEBUG=0
    
    # --- تنظیمات امنیتی ---
    PYTEST_CURRENT_TEST=
    
    # --- تنظیمات پایگاه داده تست ---
    DATABASE_URL=sqlite:///:memory:
    REDIS_URL=redis://localhost:6379/15
    
    # --- تنظیمات لاگ ---
    LOG_LEVEL=WARNING
    LOG_FORMAT=json

# ═══════════════════════════════════════════════════════════════
# ⚡ تنظیمات asyncio
# ═══════════════════════════════════════════════════════════════
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# ═══════════════════════════════════════════════════════════════
# 🏷️ نشانگرها (Markers)
# ═══════════════════════════════════════════════════════════════
markers =
    # --- دسته‌بندی اصلی ---
    smoke: آزمون‌های دود که سلامت پایه را بررسی می‌کنند
    e2e: آزمون‌های انتهابه‌انتها برای مسیرهای بحرانی
    integration: آزمایش‌های یکپارچه‌سازی سامانه تخصیص
    unit: آزمون‌های واحد برای توابع مجزا
    
    # --- دسته‌بندی عملکردی ---
    golden: آزمون‌های مقایسهٔ دقیق فایل‌های طلایی
    performance: آزمایش‌های کارایی و بنچمارک
    security: آزمایش‌های امنیتی و بررسی RBAC
    observability: آزمون‌های مرتبط با لاگ و متریک
    
    # --- دسته‌بندی فنی ---
    realtime: آزمون‌های به‌روزرسانی لحظه‌ای
    concurrent: آزمون‌های همزمانی و رقابت منابع
    asyncio: آزمون‌های مبتنی بر حلقهٔ رویداد asyncio
    
    # --- دسته‌بندی منابع ---
    slow: آزمون‌های کند که در چرخهٔ کامل اجرا می‌شوند (>5s)
    resources: آزمون‌هایی که مصرف منابع را می‌سنجند
    stress: آزمون‌های تنش و حجم بالا
    memory: آزمون‌های مصرف حافظه
    
    # --- دسته‌بندی رابط کاربری ---
    ui: آزمون‌های رابط کاربری Qt و مسیرهای دیداری
    cli: آزمون‌های رابط خط فرمان
    
    # --- دسته‌بندی خاص پروژه ---
    farsi_errors: آزمون‌های پیام‌های خطای فارسی
    counter_validation: آزمون‌های اعتبارسنجی شمارنده‌ها
    integration_excel: آزمون‌های یکپارچه‌سازی اکسل
    retry_logic: آزمون‌های منطق تلاش مجدد
    middleware: آزمون‌های میان‌افزارها
    metrics: آزمون‌های متریک‌ها و مانیتورینگ
    
    # --- دسته‌بندی محیط ---
    docker: آزمون‌هایی که نیاز به Docker دارند
    network: آزمون‌هایی که نیاز به شبکه دارند
    database: آزمون‌هایی که نیاز به پایگاه داده دارند
    redis: آزمون‌هایی که نیاز به Redis دارند
    
    # --- دسته‌بندی وضعیت ---
    skip: آزمون‌های موقتاً غیرفعال
    xfail: آزمون‌هایی که انتظار شکست دارند
    flaky: آزمون‌های ناپایدار که نیاز به بررسی دارند

# ═══════════════════════════════════════════════════════════════
# ⚠️ مدیریت هشدارها
# ═══════════════════════════════════════════════════════════════
filterwarnings =
    # --- حالت پیش‌فرض: تبدیل همه هشدارها به خطا ---
    error
    
    # --- استثناهای مجاز ---
    # هشدارهای deprecation از کتابخانه‌های شخص ثالث
    ignore::DeprecationWarning:distutils.*:
    ignore::DeprecationWarning:site.*:
    ignore::DeprecationWarning:pkg_resources.*:
    ignore::ImportWarning
    
    # هشدارهای خاص pytest
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::pytest.PytestAssertRewriteWarning
    
    # هشدارهای خاص asyncio
    ignore::ResourceWarning:asyncio.*:
    ignore::DeprecationWarning:asyncio.*:
    
    # هشدارهای خاص Qt
    ignore::DeprecationWarning:PyQt5.*:
    ignore::DeprecationWarning:PySide6.*:
    
    # هشدارهای خاص Redis
    ignore::DeprecationWarning:redis.*:
    
    # هشدارهای خاص FastAPI/Pydantic
    ignore::DeprecationWarning:pydantic.*:
    ignore::DeprecationWarning:fastapi.*:

# ═══════════════════════════════════════════════════════════════
# 📊 تنظیمات لاگ و خروجی
# ═══════════════════════════════════════════════════════════════
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = test-results/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s (%(filename)s:%(lineno)s)
log_file_date_format = %Y-%m-%d %H:%M:%S

console_output_style = progress

# ═══════════════════════════════════════════════════════════════
# 💾 تنظیمات Cache
# ═══════════════════════════════════════════════════════════════
cache_dir = .pytest_cache

# ═══════════════════════════════════════════════════════════════
# 🔧 تنظیمات پیشرفته
# ═══════════════════════════════════════════════════════════════
# تنظیمات xdist برای اجرای موازی
xdist_strict = true

# تنظیمات tmp_path
tmp_path_retention_count = 3
tmp_path_retention_policy = failed

# تنظیمات فایل‌های موقت
usefixtures = tmp_path

# ═══════════════════════════════════════════════════════════════
# 🎨 تنظیمات Qt Testing
# ═══════════════════════════════════════════════════════════════
qt_api = pyqt5
qt_no_exception_capture = 0
qt_wait_signal_raising = true

# ═══════════════════════════════════════════════════════════════
# 🔐 تنظیمات امنیتی و محدودیت‌ها
# ═══════════════════════════════════════════════════════════════
# محدودیت زمان برای تست‌های معمولی
timeout = 300
# محدودیت زمان برای تست‌های آهسته
timeout_func_only = false

# ═══════════════════════════════════════════════════════════════
# 📈 تنظیمات پوشش کد (Coverage)
# ═══════════════════════════════════════════════════════════════
[coverage:run]
source = src
branch = true
parallel = true
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*
    */dist-packages/*
    */.venv/*
    */venv/*

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
skip_empty = true
sort = Cover
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract
    @abstractmethod
    @overload
    \.\.\.$

[coverage:html]
directory = htmlcov
title = Test Coverage Report

[coverage:xml]
output = coverage.xml

# ═══════════════════════════════════════════════════════════════
# 🎯 تنظیمات JSON Report
# ═══════════════════════════════════════════════════════════════
[tool:pytest-json-report]
json_report_file = test-results/report.json
json_report_indent = 2
json_report_omit = log

# ═══════════════════════════════════════════════════════════════
# 📝 تنظیمات HTML Report
# ═══════════════════════════════════════════════════════════════
[tool:pytest-html]
self_contained = true
